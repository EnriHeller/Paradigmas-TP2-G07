name: build
on: [ push, pull_request ]
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache Maven dependencies
        uses: actions/cache@v4  # Actualizado de v3 a v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Make scripts executable
        run: chmod +x scripts/*.sh
      - name: Start services
        run: scripts/start_services.sh
      - name: Run test suite
        run: |
          export MAVEN_OPTS="-Xmx1g -XX:MaxMetaspaceSize=256m"
          docker compose -f docker/docker-compose.yaml exec -T app bash scripts/build.sh
      - name: Run mutation test
        run: docker compose -f docker/docker-compose.yaml exec -T app bash scripts/run_mutation_test.sh
      - name: Upload coverage report
        uses: codecov/codecov-action@v4  # Actualizado de v3 a v4

  package:
    runs-on: ubuntu-22.04
    needs: build
    if: contains(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache Maven dependencies
        uses: actions/cache@v4  # Actualizado de v3 a v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Make scripts executable
        run: chmod +x scripts/*.sh
      - name: Start services
        run: scripts/start_services.sh
      - name: Package
        run: docker compose -f docker/docker-compose.yaml exec -T app bash scripts/package.sh
      - name: Release
        uses: softprops/action-gh-release@v2  # Actualizado de v1 a v2
        with:
          files: target/tp2-*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
